<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPUSURBVGhD7ZpbTxNBFMd518SoH8Go8ZIYL4lfQCHSy7LUihBCAgoSTQgIGB9MRGNESKQVUIzR
        Z5MK2+XipYQQH0SLiCE+AQJRfBLiE1FU2o5n6inUmdmyS3dbS/gnv0CyM+f8T2dmd3barA1tKANkU+Q9
        DlU6Z/fntdn8ef3w9z0wjdD/Aw5/Xitcq3B2O3djt/9DkirttatSM5j8AhCDzDoU+Rb9ADBc6uXoyj8E
        n6wKZiKMubUQsSuyAhzA8NZLVuTtMAIPIHmYMWMGIYjdkeNzb8N01simSjmQbI5JbgVfnYp8HNOaK5jH
        ZZBgiUloGXBT+A2jU4LpzRGshVoIbsZaMEoEclejjeQEt9PzggSpJAIjU4p21qZcVToKgX4xgdPBTxiZ
        w2jLmGx9tq0Q4BMTMJ1MH/O5t6A9/YKOj5hAaQduOPfRnj7ldjuPQEcrnhPJEjL00IQF3icIYjlVr0rJ
        peFy4bU4/GgzsehmDhqn/FZb++YsGQ57yEjES66MVgrbIGF7p2sn2tUWbgBFASwjVsQ74o0yQjzk2tgF
        YdsoqtSIdrUFDWe5jhZSNVRKgqGW5SJitH68KGyPzKBdsRw9jn2CTpbBjkSMlvEaYft4Er7PwB2hUtTJ
        CmqDay8iiiKXo21eMPfahZ1MRqsIz3jC6fQvqnQHbfOCBgGug8mYUsRfnqFtXnBxlGmckFNP3aToRYHw
        mojqoTLhwr47VQ/bdlnYRwvYe42gbV7QYILtoEXR8wISWLhJBn80kZL+QmGbeOq01sSEzjXBM462ecHF
        SaaxEDoKgYXGZTOrFWNBEZSEheiaWg8/X+ZMDXxvJMWB01zbmtfi6XRv2vh0YniLtnnBRV2LXe5xEd/c
        Vc4cOzJaI+GZMLywRWgvdnp4JugghBbzZK6BM/lysZmUDhSR+mC5lUXQd3oP2uZl9IHo6j1J/N+uc2YH
        F5tIMMxPp46ZpKfTCokeiLmKvEvYKQHRkZnnpxmL16SRiHHCn7cDbYsFjQxvGlcrxuwigMSbRiqbKt0Q
        dFwVWkznPL9mvJOmF0FpQLvaSubFKp8ppn2qzrw1sYK+FysqaNzJdNYNLaYLilnLtkMXqvQYba6uZA8f
        8ntd1hRh9PCBCjq1MUHSjk2RW9Cefq2bAzqqdXFkGpOt2+mEQCn7OkHAkkOR7WgnOcGnUQEB03HyGIY9
        1Rm0YY6gmGIInNIveoBCTG+u4K6xH4J/ECU2mTF6NIVprZHb594MibxAKC6xWdARv50dyN6E6awXbGUO
        wnTL3K+nWWX8DwZEooYy9iccG9qQSFlZfwCl31GdXUPpeQAAAABJRU5ErkJggg==
</value>
  </data>
</root>